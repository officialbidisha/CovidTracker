{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/cases-summary/cases-summary.component.html","./src/app/cases-summary/cases-summary.component.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/httpcalls.service.ts","./src/app/search/search.component.html","./src/app/search/search.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { CasesSummaryComponent } from './cases-summary/cases-summary.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SearchComponent } from './search/search.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {path: 'search', component: SearchComponent},\r\n  {path: 'cases-summary', component: CasesSummaryComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<div class=\"container\">\r\n  <div class=\"heading\" style=\"text-align:center\">\r\n\r\n    <a routerLink=\"/\" routerLinkActive=\"active\"><h2 style=\"display:inline-block\" class=\"display-2\">Covid Tracker &nbsp;&nbsp;&nbsp;</h2></a>\r\n    <a routerLink=\"/search\" routerLinkActive=\"active\"><span class=\"material-icons\" style=\"font-size: 40px;\">\r\n      search\r\n      </span></a>\r\n      <a class=\"table-icon\" routerLink=\"/cases-summary\"  matTooltip=\"Summary\"><span class=\"material-icons\">\r\n        table_view\r\n        </span></a>\r\n     <div class=\"p-2\"></div>\r\n     <marquee behavior=\"scroll\" direction=\"left\" scrolldelay=\"3s\" width=\"60%\">Clean your hands often. Use soap and water, or an alcohol-based hand rub.\r\n      &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;\r\n      Maintain a safe distance from anyone who is coughing or sneezing.\r\n      &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;\r\n      Wear a mask when physical distancing is not possible.\r\n      &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;\r\n      Don’t touch your eyes, nose or mouth.\r\n      &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;\r\n      Cover your nose and mouth with your bent elbow or a tissue when you cough or sneeze.\r\n      &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;\r\n      Stay home if you feel unwell.\r\n      &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;\r\n      If you have a fever, cough and difficulty breathing, seek medical attention.\r\n      &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; \r\n  \r\n  </marquee>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"container\">\r\n<router-outlet></router-outlet>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'CovidTracker';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete'\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport { SearchComponent } from './search/search.component';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport { HttpcallsService } from './httpcalls.service';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport { CasesSummaryComponent } from './cases-summary/cases-summary.component';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    SearchComponent,\r\n    CasesSummaryComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgxChartsModule,\r\n    BrowserAnimationsModule,\r\n    MatAutocompleteModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatTooltipModule\r\n  ],\r\n  providers: [HttpcallsService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<div *ngIf=\"loaded\" class=\"summary-table\">\r\n  <div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"position\">\r\n        <th mat-header-cell *matHeaderCellDef>No.</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.position }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"country\">\r\n        <th mat-header-cell *matHeaderCellDef>Country</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.country }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Weight Column -->\r\n      <ng-container matColumnDef=\"confirmed\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Confirmed</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.confirmed }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Symbol Column -->\r\n      <ng-container matColumnDef=\"recovered\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Recovered</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.recovered }}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"deaths\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Deaths</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.deaths }}</td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n    </table>\r\n\r\n    <mat-paginator\r\n      [pageSizeOptions]=\"[\r\n        5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150,\r\n        160, 170, 180, 190, 200\r\n      ]\"\r\n      showFirstLastButtons\r\n      aria-label=\"Select page of periodic elements\"\r\n    >\r\n    </mat-paginator>\r\n  </div>\r\n</div>\r\n<div class=\"spin\" *ngIf=\"!loaded\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { HttpcallsService } from \"../httpcalls.service\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\n\r\n@Component({\r\n  selector: \"app-cases-summary\",\r\n  templateUrl: \"./cases-summary.component.html\",\r\n  styleUrls: [\"./cases-summary.component.scss\"],\r\n})\r\nexport class CasesSummaryComponent implements OnInit, AfterViewInit {\r\n  public loaded = false;\r\n  public country: string[] = [];\r\n  public totalConfirmed: number[] = [];\r\n  public totalDeaths: number[] = [];\r\n  public totalRecovered: number[] = [];\r\n  public displayedColumns: string[] = [\r\n    \"position\",\r\n    \"country\",\r\n    \"confirmed\",\r\n    \"recovered\",\r\n    \"deaths\",\r\n  ];\r\n  public dtSource = [];\r\n  public dataSource = new MatTableDataSource<PeriodicElement>(this.dtSource);\r\n\r\n  @ViewChild(MatPaginator, { static: false })\r\n  set paginator(value: MatPaginator) {\r\n    this.dataSource.paginator = value;\r\n  }\r\n\r\n  @ViewChild(MatSort, { static: false })\r\n  set matSort(value: MatSort) {\r\n    this.dataSource.sort = value;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.matSort;\r\n  }\r\n\r\n  constructor(private httpcall: HttpcallsService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.httpcall.getbyCountries().subscribe((result: any) => {\r\n      for (let eachRes of result.Countries) {\r\n        this.country.push(eachRes.Country);\r\n        this.totalConfirmed.push(eachRes.TotalConfirmed);\r\n        this.totalRecovered.push(eachRes.TotalRecovered);\r\n        this.totalDeaths.push(eachRes.TotalDeaths);\r\n      }\r\n      for (let i = 0; i < this.country.length; i++) {\r\n        const obj = {\r\n          position: i + 1,\r\n          country: this.country[i],\r\n          confirmed: this.totalConfirmed[i],\r\n          recovered: this.totalConfirmed[i] - this.totalDeaths[i],\r\n          deaths: this.totalDeaths[i],\r\n        };\r\n        this.dtSource.push(obj);\r\n      }\r\n      if (this.dtSource.length === this.country.length) {\r\n        this.dataSource = new MatTableDataSource<any>(this.dtSource);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.loaded = true;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  country: string;\r\n  position: number;\r\n  confirmed: number;\r\n  recovered: number;\r\n  deaths: number;\r\n}\r\n","<div class=\"contains\" *ngIf=\"globalresult\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n      <div class=\"box\">\r\n        <div>\r\n          <span class=\"badge badge-light\">1st</span>\r\n          <div class=\"p-2\"></div>\r\n          <div class=\"item\">\r\n            <div class=\"item-name\">Country Name:</div>\r\n            <div class=\"item-content\">\r\n              {{\r\n                globalresult.Countries[top1].Country.length > 11\r\n                  ? globalresult.Countries[top1].CountryCode\r\n                  : globalresult.Countries[top1].Country\r\n              }}\r\n            </div>\r\n          </div>\r\n          <div class=\"item\">\r\n            <div class=\"item-name\">Date:</div>\r\n            <div class=\"item-content\">\r\n              {{ globalresult.Countries[top1].Date | date: \"MMM d, y\" }}\r\n            </div>\r\n          </div>\r\n          <div class=\"item\">\r\n            <div class=\"item-name\">Number of Infected:</div>\r\n            <div class=\"item-content\">\r\n              {{ globalresult.Countries[top1].TotalConfirmed }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!--name card ends-->\r\n    </div>\r\n    <div class=\"col-md-8\">\r\n      <div class=\"box\">\r\n        <div class=\"chart-box\">\r\n          <ngx-charts-line-chart\r\n            [scheme]=\"colorScheme\"\r\n            [legend]=\"legend\"\r\n            [showXAxisLabel]=\"showXAxisLabel\"\r\n            [showYAxisLabel]=\"showYAxisLabel\"\r\n            [xAxis]=\"xAxis\"\r\n            [yAxis]=\"yAxis\"\r\n            [xAxisLabel]=\"xAxisLabel\"\r\n            [yAxisLabel]=\"yAxisLabel\"\r\n            [timeline]=\"timeline\"\r\n            [results]=\"multi1\"\r\n            [gradient]=\"gradient\"\r\n            [showGridLines]=\"true\"\r\n            [roundDomains]=\"true\"\r\n          >\r\n          </ngx-charts-line-chart>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <div class=\"box\">\r\n        <div>\r\n          <span class=\"badge badge-light\">2nd</span>\r\n          <div class=\"p-2\"></div>\r\n          <div class=\"item\">\r\n            <div class=\"item-name\">Country Name:</div>\r\n            <div class=\"item-content\">\r\n              {{\r\n                globalresult.Countries[top2].Country.length > 11\r\n                  ? globalresult.Countries[top2].CountryCode\r\n                  : globalresult.Countries[top2].Country\r\n              }}\r\n            </div>\r\n          </div>\r\n          <div class=\"item\">\r\n            <div class=\"item-name\">Date:</div>\r\n            <div class=\"item-content\">\r\n              {{ globalresult.Countries[top2].Date | date: \"MMM d, y\" }}\r\n            </div>\r\n          </div>\r\n          <div class=\"item\">\r\n            <div class=\"item-name\">Number of Infected:</div>\r\n            <div class=\"item-content\">\r\n              {{ globalresult.Countries[top2].TotalConfirmed }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!--name card ends-->\r\n    </div>\r\n    <div class=\"col-md-8\">\r\n      <div class=\"box\">\r\n        <div class=\"chart-box\">\r\n          <ngx-charts-line-chart\r\n            [scheme]=\"colorScheme\"\r\n            [legend]=\"legend\"\r\n            [showXAxisLabel]=\"showXAxisLabel\"\r\n            [showYAxisLabel]=\"showYAxisLabel\"\r\n            [xAxis]=\"xAxis\"\r\n            [yAxis]=\"yAxis\"\r\n            [xAxisLabel]=\"xAxisLabel\"\r\n            [yAxisLabel]=\"yAxisLabel\"\r\n            [timeline]=\"timeline\"\r\n            [results]=\"multi2\"\r\n            [gradient]=\"gradient\"\r\n            [showGridLines]=\"true\"\r\n            [roundDomains]=\"true\"\r\n          >\r\n          </ngx-charts-line-chart>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <div class=\"box\">\r\n        <div>\r\n          <span class=\"badge badge-light\">3rd</span>\r\n          <div class=\"p-2\"></div>\r\n          <div class=\"item\">\r\n            <div class=\"item-name\">Country Name:</div>\r\n            <div class=\"item-content\">\r\n              {{\r\n                globalresult.Countries[top3].Country.length > 11\r\n                  ? globalresult.Countries[top3].CountryCode\r\n                  : globalresult.Countries[top3].Country\r\n              }}\r\n            </div>\r\n          </div>\r\n          <div class=\"item\">\r\n            <div class=\"item-name\">Date:</div>\r\n            <div class=\"item-content\">\r\n              {{ globalresult.Countries[top3].Date | date: \"MMM d, y\" }}\r\n            </div>\r\n          </div>\r\n          <div class=\"item\">\r\n            <div class=\"item-name\">Number of Infected:</div>\r\n            <div class=\"item-content\">\r\n              {{ globalresult.Countries[top3].TotalConfirmed }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!--name card ends-->\r\n    </div>\r\n    <div class=\"col-md-8\">\r\n      <div class=\"box\">\r\n        <div class=\"chart-box\">\r\n          <ngx-charts-line-chart\r\n            [scheme]=\"colorScheme\"\r\n            [legend]=\"legend\"\r\n            [showXAxisLabel]=\"showXAxisLabel\"\r\n            [showYAxisLabel]=\"showYAxisLabel\"\r\n            [xAxis]=\"xAxis\"\r\n            [yAxis]=\"yAxis\"\r\n            [xAxisLabel]=\"xAxisLabel\"\r\n            [yAxisLabel]=\"yAxisLabel\"\r\n            [timeline]=\"timeline\"\r\n            [results]=\"multi3\"\r\n            [gradient]=\"gradient\"\r\n            [showGridLines]=\"true\"\r\n            [roundDomains]=\"true\"\r\n          >\r\n          </ngx-charts-line-chart>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!---contains ended-->\r\n<div *ngIf=\"!globalresult\" class=\"spin\">\r\n  <div class=\"fluid\">\r\n    <mat-spinner></mat-spinner>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpcallsService } from '../httpcalls.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  public view: any[] = [600, 300];\r\n\r\n  /**\r\n   * Options\r\n   */\r\n  public legend = true;\r\n  public showLabels = true;\r\n  public animations = true;\r\n  public xAxis = true;\r\n  public yAxis = true;\r\n  public showYAxisLabel = false;\r\n  public showXAxisLabel = false;\r\n  public xAxisLabel = 'Number of Days';\r\n  public yAxisLabel = 'Cases';\r\n  public timeline = false;\r\n  public gradient = true;\r\n  public showGridLines = true;\r\n  public roundDomains = true;\r\n  public colorScheme = {\r\n    domain: ['#1f8ef1', '#FF1493', '#00f2c3', '#ec250d'],\r\n  };\r\n  public top1 = 0;\r\n  public top2 = 0;\r\n  public top3 = 0;\r\n  public globalresult;\r\n\r\n  public multi1: any;\r\n  public multi2: any;\r\n  public multi3: any;\r\n\r\n  public yAxisTickFormattingFn = this.yAxisTickFormatting.bind(this);\r\n  public xAxisTickFormattingFn = this.xAxisTickFormatting.bind(this);\r\n\r\n  constructor(private httpcall: HttpcallsService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.httpcall.getbyCountries().subscribe((result: any) => {\r\n      const countries = result.Countries;\r\n      let first = 0;\r\n      let second = 0;\r\n      let third = 0;\r\n      let index1 = -1;\r\n      let index2 = -1;\r\n      let index3 = -1;\r\n      for (let i = 0; i < countries.length; i++) {\r\n        if (countries[i].TotalConfirmed >= first) {\r\n          third = second;\r\n          index3 = index2;\r\n          second = first;\r\n          index2 = index1;\r\n          first = countries[i].TotalConfirmed;\r\n          index1 = i;\r\n        } else if (countries[i].TotalConfirmed >= second) {\r\n          third = second;\r\n          index3 = index2;\r\n          second = countries[i].TotalConfirmed;\r\n          index2 = i;\r\n        } else if (countries[i].TotalConfirmed >= third) {\r\n          third = countries[i].TotalConfirmed;\r\n          index3 = i;\r\n        }\r\n      }\r\n      this.top1 = index1;\r\n      this.top2 = index2;\r\n      this.top3 = index3;\r\n      this.globalresult = result;\r\n      this.getChartData();\r\n    });\r\n  }\r\n\r\n  public getChartObjectData(result: any) {\r\n    const totalCasesArray = [];\r\n    for (const i of result) {\r\n      const temp = {\r\n        name: new Date(i.Date),\r\n        value: i.Confirmed,\r\n      };\r\n      totalCasesArray.push(temp);\r\n    }\r\n    const totalCasesObject = {\r\n      name: 'Confirmed',\r\n      series: totalCasesArray,\r\n    };\r\n    const totalDeathsArray = [];\r\n    for (const i of result) {\r\n      const temp = {\r\n        name: new Date(i.Date),\r\n        value: i.Deaths,\r\n      };\r\n      totalDeathsArray.push(temp);\r\n    }\r\n    const totalDeathsObject = {\r\n      name: 'Death',\r\n      series: totalDeathsArray,\r\n    };\r\n    const totalRecoveredArray = [];\r\n    for (const i of  result) {\r\n      const temp = {\r\n        name: new Date(i.Date),\r\n        value: i.Recovered,\r\n      };\r\n      totalRecoveredArray.push(temp);\r\n    }\r\n    const totalRecoveredObject = {\r\n      name: 'Recovery',\r\n      series: totalRecoveredArray,\r\n    };\r\n    const chartInfo = [];\r\n    chartInfo.push(totalCasesObject);\r\n    chartInfo.push(totalDeathsObject);\r\n    chartInfo.push(totalRecoveredObject);\r\n    return chartInfo;\r\n  }\r\n\r\n  public getChartData() {\r\n    this.httpcall\r\n      .getChartDataByCountries(this.globalresult.Countries[this.top1].Slug)\r\n      .subscribe((result: any) => {\r\n        this.multi1 = this.getChartObjectData(result);\r\n      });\r\n    this.httpcall\r\n      .getChartDataByCountries(this.globalresult.Countries[this.top2].Slug)\r\n      .subscribe((result: any) => {\r\n        this.multi2 = this.getChartObjectData(result);\r\n      });\r\n    this.httpcall\r\n      .getChartDataByCountries(this.globalresult.Countries[this.top3].Slug)\r\n      .subscribe((result: any) => {\r\n        this.multi3 = this.getChartObjectData(result);\r\n      });\r\n  }\r\n\r\n  yAxisTickFormatting(value) {\r\n    return '';\r\n  }\r\n  xAxisTickFormatting(value) {\r\n    return '';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpcallsService {\r\n\r\n  public headerDict = {\r\n    'Content-Type': 'application/json',\r\n    Accept: 'application/json',\r\n    'Access-Control-Allow-Headers': 'Content-Type',\r\n  };\r\n\r\n  public requestOptions = {\r\n    headers: new HttpHeaders(this.headerDict),\r\n  };\r\n  constructor(private https: HttpClient) {}\r\n\r\n  getCountries(): Observable<any> {\r\n    return this.https.get('https://api.covid19api.com/countries', this.requestOptions);\r\n  }\r\n  getbyCountries(): Observable<any> {\r\n    return this.https.get('https://api.covid19api.com/summary', this.requestOptions);\r\n  }\r\n  getChartDataByCountries(slug: any): Observable<any> {\r\n    return this.https.get('https://api.covid19api.com/total/country/' + slug, this.requestOptions);\r\n  }\r\n  getCountrySpecific(country): Observable<any> {\r\n    return this.https.get(\r\n      'https://api.covid19api.com/country/' + country + '/status/confirmed', this.requestOptions\r\n    );\r\n  }\r\n}\r\n","<form\r\n  class=\"example-form\"\r\n  [formGroup]=\"countryForm\"\r\n  (ngSubmit)=\"onSubmit(countryForm.value.country)\"\r\n>\r\n  <div class=\"row\" style=\"margin: auto\">\r\n    <div class=\"col-md-8\">\r\n      <mat-form-field hideRequiredMarker class=\"example-full-width\">\r\n        <div class=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Country\"\r\n            aria-label=\"Number\"\r\n            matInput\r\n            formControlName=\"country\"\r\n            [matAutocomplete]=\"auto\"\r\n            required\r\n          />\r\n        </div>\r\n        <mat-autocomplete #auto=\"matAutocomplete\">\r\n          <mat-option *ngFor=\"let option of options\" [value]=\"option\">\r\n            {{ option }}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <button mat-raised-button color=\"accent\" type=\"submit\">Submit</button>\r\n    </div>\r\n  </div>\r\n</form>\r\n<div class=\"p-3\"></div>\r\n<div class=\"contains\" *ngIf=\"globalResultSearch\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n      <div class=\"box\">\r\n        <div>\r\n          <div class=\"item\">\r\n            <div class=\"item-name\">Country Name:</div>\r\n            <div class=\"item-content\">\r\n              {{ globalResultSearch.Country }}\r\n            </div>\r\n          </div>\r\n          <div class=\"item\">\r\n            <div class=\"item-name\">Date:</div>\r\n            <div class=\"item-content\">\r\n              {{ globalResultSearch.Date | date: \"MMM d, y\" }}\r\n            </div>\r\n          </div>\r\n          <div class=\"item\">\r\n            <div class=\"item-name\">Number of Infected:</div>\r\n            <div class=\"item-content\">\r\n              {{ globalResultSearch.TotalConfirmed }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-8\">\r\n      <div class=\"box\">\r\n        <div class=\"line-chart\">\r\n          <ngx-charts-line-chart\r\n            [scheme]=\"colorScheme\"\r\n            [legend]=\"legend\"\r\n            [showXAxisLabel]=\"showXAxisLabel\"\r\n            [showYAxisLabel]=\"showYAxisLabel\"\r\n            [xAxis]=\"xAxis\"\r\n            [yAxis]=\"yAxis\"\r\n            [xAxisLabel]=\"xAxisLabel\"\r\n            [yAxisLabel]=\"yAxisLabel\"\r\n            [timeline]=\"timeline\"\r\n            [results]=\"multi\"\r\n            [gradient]=\"gradient\"\r\n            [showGridLines]=\"true\"\r\n            [roundDomains]=\"true\"\r\n          >\r\n          </ngx-charts-line-chart>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!---ngif-->\r\n<div class=\"spin\" *ngIf=\"!globalResultSearch && flagSearch && !nullstring\">\r\n  <!---when the globalresult is false and flag false-->\r\n  <div class=\"fluid\">\r\n    <mat-spinner></mat-spinner>\r\n  </div>\r\n</div>\r\n<div class=\"spin\" *ngIf=\"nullstring\">\r\n  <!---when the globalresult is false and flag false-->\r\n  <div class=\"spin2\">\r\n    <div class=\"fluid\">\r\n      <div\r\n        class=\"card\"\r\n      >\r\n        <div class=\"card-body\">\r\n          <h2 class=\"card-text\">\r\n            Please Choose a Country\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { HttpcallsService } from '../httpcalls.service';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss'],\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  public countryForm = new FormGroup({\r\n    country: new FormControl(''),\r\n  });\r\n  public view: any[] = [600, 300];\r\n\r\n  /**\r\n   * Options for ngx-charts\r\n   */\r\n  public legend = true;\r\n  public showLabels = true;\r\n  public animations = true;\r\n  public xAxis = true;\r\n  public yAxis = true;\r\n  public showYAxisLabel = false;\r\n  public showXAxisLabel = false;\r\n  public xAxisLabel = 'Number of Days';\r\n  public yAxisLabel = 'Cases';\r\n  public timeline = false;\r\n  public gradient = true;\r\n  public showGridLines = true;\r\n  public roundDomains = true;\r\n  public colorScheme = {\r\n    domain: ['#1f8ef1', '#FF1493', '#00f2c3', '#ec250d'],\r\n  };\r\n  public countryData: any;\r\n  public globalResultSearch;\r\n  public flagSearch: boolean;\r\n  public nullstring: boolean;\r\n  public multi: any;\r\n  public yAxisTickFormattingFn = this.yAxisTickFormatting.bind(this);\r\n  public xAxisTickFormattingFn = this.xAxisTickFormatting.bind(this);\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private httpcallsService: HttpcallsService\r\n  ) {}\r\n  public options: string[] = [];\r\n  filteredOptions: Observable<string[]>;\r\n\r\n  ngOnInit() {\r\n    this.httpcallsService.getCountries().subscribe((res) => {\r\n      const result: any = res;\r\n      for (const i of result) {\r\n        this.options.push(i.Country);\r\n      }\r\n    });\r\n\r\n    this.filteredOptions = this.countryForm.controls.country.valueChanges.pipe(\r\n      startWith(''),\r\n      map((value) => this._filter(value))\r\n    );\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.options.filter((option) =>\r\n      option.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n  onSubmit(formValues) {\r\n    this.flagSearch = true;\r\n    this.httpcallsService.getbyCountries().subscribe((response) => {\r\n      {\r\n        this.countryData = response;\r\n        if (formValues === '') {\r\n          this.nullstring = true;\r\n        } else {\r\n          for (let i = 0; i < 186; i++) {\r\n            if (this.countryData.Countries[i].Country.includes(formValues)) {\r\n              this.globalResultSearch = this.countryData.Countries[i];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.getChartData();\r\n    });\r\n  }\r\n  getChartObjectData(result: any) {\r\n    const totalCasesArray = [];\r\n\r\n    for (const i of result) {\r\n      const temp = {\r\n        name: new Date(i.Date),\r\n        value: i.Confirmed,\r\n      };\r\n      totalCasesArray.push(temp);\r\n    }\r\n    const totalCasesObject = {\r\n      name: 'Confirmed',\r\n      series: totalCasesArray,\r\n    };\r\n    const totalDeathsArray = [];\r\n    for (const i of result) {\r\n      const temp = {\r\n        name: new Date(i.Date),\r\n        value: i.Deaths,\r\n      };\r\n      totalDeathsArray.push(temp);\r\n    }\r\n    const totalDeathsObject = {\r\n      name: 'Death',\r\n      series: totalDeathsArray,\r\n    };\r\n    const totalRecoveredArray = [];\r\n    for (const i of result) {\r\n      const temp = {\r\n        name: new Date(i.Date),\r\n        value: i.Recovered,\r\n      };\r\n      totalRecoveredArray.push(temp);\r\n    }\r\n    const totalRecoveredObject = {\r\n      name: 'Recovery',\r\n      series: totalRecoveredArray,\r\n    };\r\n    const chartInfo = [];\r\n    chartInfo.push(totalCasesObject);\r\n    chartInfo.push(totalDeathsObject);\r\n    chartInfo.push(totalRecoveredObject);\r\n    return chartInfo;\r\n  }\r\n\r\n  getChartData() {\r\n    this.httpcallsService\r\n      .getChartDataByCountries(this.globalResultSearch?.Slug)\r\n      .subscribe((result: any) => {\r\n        this.multi = this.getChartObjectData(result);\r\n      });\r\n  }\r\n\r\n  yAxisTickFormatting(value) {\r\n    return '';\r\n  }\r\n  xAxisTickFormatting(value) {\r\n    return '';\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}